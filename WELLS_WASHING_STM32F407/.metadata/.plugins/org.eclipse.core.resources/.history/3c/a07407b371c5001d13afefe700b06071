/*
 * uart.c
 *
 *  Created on: Mar 18, 2023
 *      Author: ADMIN
 */

#include  "uart.h"

extern UART_HandleTypeDef huart2;
uint8_t uart_rxbuf[UART_BUF_SIZE];
uint8_t uart_txbuf[UART_BUF_SIZE];
uint16_t UART_Rx_recved=0;
uint32_t UART_Rx_Time =0;

uint32_t uart_rx_cnt =0;
void uart_dma_start(void);
void uart_process(void);
void uart_dma_stop(void);

void uart_dma_start(void){
	HAL_UART_Receive_DMA(&huart2, uart_rxbuf, UART_BUF_SIZE);
}

void uart_dma_stop(void){
	HAL_UART_DMAStop(&huart2);			//stop DMA
}

__weak process_data_rx_uart();

void uart_process(void){
	if(huart2.hdmarx->Instance->NDTR != UART_BUF_SIZE) {
	  if(huart2.hdmarx->Instance->NDTR != UART_Rx_recved) {
		  UART_Rx_recved = huart2.hdmarx->Instance->NDTR;
		  UART_Rx_Time = HAL_GetTick() + 3;
	  }else{
		  if(HAL_GetTick()> UART_Rx_Time)  // timeoutframe
		  {
			  uart_dma_stop();
			  uart_rx_cnt++;
			  UART_Rx_recved =0;
			  uart_dma_start();
			  process_data_rx_uart();
		  }
	  }
	}
}

HAL_StatusTypeDef uart_transmit_block(uint8_t *data,uint16_t size,uint16_t timeout){
	return HAL_UART_Transmit(&huart2, data, size, timeout);
}
